server.port=${PORT:0}
spring.application.name=users-ws
eureka.client.service-url.defaultZone = http://localhost:8010/eureka
spring.devtools.restart.enabled=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
#not sure if this is needed
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.lower-case-service-id=true

#PostgreSQL connection
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/eshop
spring.datasource.username=postgres
spring.datasource.password=kolev
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#PATHS
login.url.path=/users/logingg

#Logging
#If we want to debug FEIGN CLIENTS
logging.level.com.revo.eshop.userservice.serviceClients.OrdersServiceClient=DEBUG

#Hystrix Circuit Breaker properties DOES NOT WORK
#feign.hystrix.enabled=true

#Zipkin default port
spring.zipkin.base-url=http://localhost:9411
spring.zipkin.enabled=true
spring.zipkin.service.name=users-ws
#could send them over http, rabbitMQ or apache Kafka. Here we are using HTTP
spring.zipkin.sender.type=web
# 0.1 = 10%, 1= 100% of the information
spring.sleuth.enabled=true
spring.sleuth.sampler.probability=1